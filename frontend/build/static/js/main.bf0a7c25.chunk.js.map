{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","components/Meta.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UsersListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_CLEAR_ITEMS","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_MYLIST_REQUEST","ORDER_MYLIST_SUCCESS","ORDER_MYLIST_FAIL","ORDER_MYLIST_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","success","orderCreate","order","orderDetails","orderItems","orderPay","orderMyList","orders","userList","users","userDelete","userUpdate","productDelete","productCreate","productUpdate","orderList","orderDeliver","productReviewCreate","productTopRated","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","navigate","useNavigate","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","className","Control","name","onChange","target","value","placeholder","Button","variant","logout","dispatch","removeItem","document","location","href","getUserDetails","id","getState","a","config","headers","Authorization","token","axios","get","data","message","response","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","Collapse","Nav","Link","NavDropdown","title","split","Item","onClick","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","active","listProducts","pageNumber","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","HomeScreen","params","useParams","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","successReview","loadingReview","errorReview","rounded","ListGroup","countInStock","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","useLocation","search","Number","removeFromCartHandler","removeFromCart","xs","Select","event","reduce","acc","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","createElement","async","onload","body","appendChild","window","paypal","amount","onSuccess","paymentResult","console","log","payOrder","deliverOrder","UsersListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","OrderListScreen","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.bf0a7c25.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\r\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS'\r\n\r\n\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'"," export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\n export const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\n export const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n export const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\r\n\r\n export const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\n export const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\n export const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\n export const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\n export const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\n export const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\n export const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\n export const ORDER_MYLIST_REQUEST = 'ORDER_MYLIST_REQUEST'\r\n export const ORDER_MYLIST_SUCCESS = 'ORDER_MYLIST_SUCCESS'\r\n export const ORDER_MYLIST_FAIL = 'ORDER_MYLIST_FAIL'\r\n export const ORDER_MYLIST_RESET = 'ORDER_MYLIST_RESET'\r\n\r\n export const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\n export const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\n export const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\n export const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\n export const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\n export const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\n export const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer, productTopRatedReducer } from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers'\r\nimport { orderCreateReducer, orderDeliverReducer, orderDetailsReducer, orderListReducer, orderMyListReducer, orderPayReducer } from './reducers/orderReducers'\r\n\r\n\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderMyList: orderMyListReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    orderList: orderListReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n})\r\n\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\nconst paymentMethodFromStorage = localStorage.getItem('paymentMethod') ? JSON.parse(localStorage.getItem('paymentMethod')) : {}\r\n\r\n\r\nconst initialState = {\r\n    cart: { cartItems: cartItemsFromStorage, shippingAddress: shippingAddressFromStorage, paymentMethod: paymentMethodFromStorage },\r\n    userLogin: { userInfo: userInfoFromStorage },\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\n\r\n\r\nexport default store","import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_CREATE_FAIL, PRODUCT_CREATE_RESET, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_UPDATE_RESET, PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_REVIEW_FAIL, PRODUCT_CREATE_REVIEW_RESET, PRODUCT_TOP_REQUEST, PRODUCT_TOP_SUCCESS, PRODUCT_TOP_FAIL } from '../constants/productConstants'\r\n\r\n\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return { loading: false, products: action.payload.products, pages: action.payload.pages, page: action.payload.page }\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true }\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload }\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\n","import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD, CART_CLEAR_ITEMS } from '../constants/cartConstants'\r\n\r\n\r\n\r\n\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    switch (action.type) {\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload\r\n\r\n            const existItem = state.cartItems.find((x) => x.product === item.product)\r\n\r\n            if (existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map((x) => x.product === existItem.product ? item : x ),\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter((x) => x.product !== action.payload),\r\n            }\r\n\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload,\r\n            }\r\n\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload,\r\n            }\r\n\r\n        case CART_CLEAR_ITEMS:\r\n            return {\r\n                ...state,\r\n                cartItems: [],\r\n            }\r\n\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}","import { USER_DELETE_FAIL, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_RESET, USER_DETAILS_SUCCESS, USER_LIST_FAIL, USER_LIST_REQUEST, USER_LIST_RESET, USER_LIST_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_REQUEST, USER_UPDATE_RESET, USER_UPDATE_SUCCESS } from \"../constants/userConstants\"\r\n\r\n\r\n\r\nexport const userLoginReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true }\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LOGOUT:\r\n            return { }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const userRegisterReducer = (state = { }, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true }\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} } \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true }\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LIST_RESET:\r\n            return { users: [] }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_UPDATE_RESET:\r\n            return { user: {} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","import { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_PAY_FAIL, ORDER_PAY_SUCCESS, ORDER_PAY_REQUEST, ORDER_PAY_RESET, ORDER_MYLIST_REQUEST, ORDER_MYLIST_SUCCESS, ORDER_MYLIST_FAIL, ORDER_MYLIST_RESET, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL, ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_FAIL, ORDER_DELIVER_RESET, ORDER_CREATE_RESET } from \"../constants/orderConstants\";\r\n\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_CREATE_REQUEST:\r\n            return {\r\n                loading: true,\r\n            }\r\n        case ORDER_CREATE_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload,\r\n            }\r\n        case ORDER_CREATE_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        case ORDER_CREATE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const orderDetailsReducer = (state = { loading: true, orderItems: [], shippingAddress: {} }, action) => {\r\n    switch(action.type) {\r\n        case ORDER_DETAILS_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            }\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                order: action.payload,\r\n            }\r\n        case ORDER_DETAILS_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_PAY_REQUEST:\r\n            return {\r\n                loading: true,\r\n            }\r\n        case ORDER_PAY_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n            }\r\n        case ORDER_PAY_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        case ORDER_PAY_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport const orderMyListReducer = (state = { orders:[] }, action) => {\r\n    switch(action.type) {\r\n        case ORDER_MYLIST_REQUEST:\r\n            return {\r\n                loading: true,\r\n            }\r\n        case ORDER_MYLIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload,\r\n            }\r\n        case ORDER_MYLIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        case ORDER_MYLIST_RESET:\r\n            return { orders: [] }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const orderListReducer = (state = { orders:[] }, action) => {\r\n    switch(action.type) {\r\n        case ORDER_LIST_REQUEST:\r\n            return {\r\n                loading: true,\r\n            }\r\n        case ORDER_LIST_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                orders: action.payload,\r\n            }\r\n        case ORDER_LIST_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n    switch(action.type) {\r\n        case ORDER_DELIVER_REQUEST:\r\n            return {\r\n                loading: true,\r\n            }\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                success: true,\r\n            }\r\n        case ORDER_DELIVER_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload,\r\n            }\r\n        case ORDER_DELIVER_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n\r\n}","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst SearchBox = () => {\r\n    const navigate = useNavigate()\r\n\r\n    const [keyword, setKeyword] = useState('')\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (keyword.trim()) {\r\n            navigate(`/search/${keyword}`)\r\n        } else {\r\n            navigate('/')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={submitHandler} className='d-flex'>\r\n            <Form.Control type='text' name='q' onChange={(e) => setKeyword(e.target.value)} placeholder='Search Products...' ></Form.Control>\r\n            <Button type='submit' variant='outline-secondary' className='p-2'>Search</Button>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import axios from 'axios'\r\nimport { USER_DELETE_FAIL, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_RESET, USER_DETAILS_SUCCESS, USER_LIST_FAIL, USER_LIST_REQUEST, USER_LIST_RESET, USER_LIST_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS } from \"../constants/userConstants\"\r\nimport { ORDER_MYLIST_RESET } from '../constants/orderConstants'\r\n\r\n\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/users/login', { email, password }, config)\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    localStorage.removeItem('cartItems')\r\n    localStorage.removeItem('shippingAddress')\r\n    localStorage.removeItem('paymentMethod')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_MYLIST_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n    document.location.href = '/login'\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post('/api/users', { name, email, password }, config)\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState() \r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users/${id}`, config)\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message ? error.response.data.message : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState() \r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/profile`, user, config)\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message ? error.response.data.message : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState() \r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users`, config)\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message ? error.response.data.message : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState() \r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/users/${id}`, config)\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS,\r\n        })\r\n\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message ? error.response.data.message : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState() \r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.put(`/api/users/${user._id}`, user, config)\r\n\r\n        dispatch({ type: USER_UPDATE_SUCCESS})\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message ? error.response.data.message : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Container, Navbar, Nav, NavDropdown} from 'react-bootstrap'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\n\r\n\r\nconst Header = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n            <Container>\r\n                <LinkContainer to='/'>\r\n                    <Navbar.Brand className='navbrand-cyber'>CyberShop</Navbar.Brand>\r\n                </LinkContainer>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <SearchBox />\r\n                    \r\n                    <Nav className=\"ms-auto\">\r\n                        <LinkContainer to='/cart'>\r\n                            <Nav.Link><i className=\"fas fa-shopping-cart\"></i>&nbsp;&nbsp;Cart</Nav.Link>\r\n                        </LinkContainer>\r\n                        {userInfo ? \r\n                        (\r\n                            <NavDropdown title={userInfo.name.split(' ')[0]} id='username'>\r\n                                <LinkContainer to='/profile'>\r\n                                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                            </NavDropdown>  \r\n                        ) : (\r\n                            <LinkContainer to='/login'>\r\n                                <Nav.Link><i className=\"fas fa-user\"></i>&nbsp;&nbsp;Sign In</Nav.Link>\r\n                            </LinkContainer>\r\n                        )}\r\n\r\n                        {userInfo && userInfo.isAdmin && (\r\n                            <NavDropdown title='Admin Actions' id='adminmenu'>\r\n                                <LinkContainer to='/admin/userlist'>\r\n                                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to='/admin/productlist'>\r\n                                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                                <LinkContainer to='/admin/orderlist'>\r\n                                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                                </LinkContainer>\r\n                            </NavDropdown>  \r\n                        )}\r\n\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3'>\r\n                        Copyright &copy; CyberShop\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n    return (\r\n        <div className='rating'>\r\n            <span>\r\n                <i style={{ color }} className={value >=1 ? 'fas fa-star' : value >= 0.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={value >=2 ? 'fas fa-star' : value >= 1.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={value >=3 ? 'fas fa-star' : value >= 2.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={value >=4 ? 'fas fa-star' : value >= 3.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n            <span>\r\n                <i style={{ color }} className={value >=5 ? 'fas fa-star' : value >= 4.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n            </span>\r\n         \r\n            <span>{text && text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nRating.defaultProps = {\r\n    color:'#f8e825',\r\n}\r\n\r\nRating.propTypes = {\r\n    value: PropTypes.number,\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n}\r\n\r\nexport default Rating\r\n","import React from \"react\"\r\nimport { Link } from 'react-router-dom'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\n\r\nconst Product = ({ product }) => {\r\n    return (\r\n        \r\n        <Card className='my-3 p-3 rounded card border-dark mb-3'>\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} variant='top' />\r\n            </Link>\r\n            <Card.Body>\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Title as='div' className='cardtitlebox'><strong>{product.name}</strong></Card.Title>\r\n            </Link>\r\n            <Card.Text as='div'>\r\n                <Rating value={product.rating} text={`${product.numReviews} reviews`}/>\r\n            </Card.Text>\r\n\r\n            <Card.Text as='h3'>${product.price}</Card.Text>\r\n            </Card.Body>    \r\n        </Card>\r\n       \r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\n\r\nconst Message = ({ variant, children}) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info',\r\n    \r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner animation='border' role='status' style={{ width: '100px', height: '100px', margin:'auto', display:'block' }}>\r\n           <span className='sr-only'>Loading...</span> \r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst Paginate = ({ pages, page, isAdmin=false, keyword='' }) => {\r\n\r\n    return pages > 1 && (\r\n        <Pagination>\r\n            {[...Array(pages).keys()].map((x) => (\r\n                <LinkContainer key={x + 1} to={!isAdmin ? (keyword ? `/search/${keyword}/page/${x + 1}` : `/page/${x + 1}`) : (`/admin/productlist/${x + 1}`)}>\r\n                    <Pagination.Item active={x+1 === page}>{x + 1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n}\r\n\r\nexport default Paginate\r\n","import axios from 'axios'\r\nimport { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_CREATE_FAIL, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_REVIEW_FAIL, PRODUCT_TOP_REQUEST, PRODUCT_TOP_SUCCESS, PRODUCT_TOP_FAIL } from '../constants/productConstants'\r\nimport { logout } from './userActions'\r\n\r\n\r\nexport const listProducts = (keyword = '', pageNumber = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState() \r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/products/${id}`, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message ? error.response.data.message : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState() \r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/products`, {}, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message ? error.response.data.message : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState() \r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/products/${product._id}`, product, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message ? error.response.data.message : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState() \r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n\r\n        await axios.post(`/api/products/${productId}/reviews`, review, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n        })\r\n\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message ? error.response.data.message : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/top`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\r\n        })\r\n    }\r\n\r\n}\r\n\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nconst ProductCarousel = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const productTopRated = useSelector((state) => state.productTopRated)\r\n    const { loading, error, products } = productTopRated\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(listTopProducts())\r\n    }, [dispatch])\r\n\r\n\r\n\r\n    return loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n        <Carousel pause='hover' className='bg-gray'>\r\n            {products.map(product => (\r\n                <Carousel.Item key={product._id}>\r\n                    <Link to={`/product/${product._id}`} >\r\n                        <Image src={product.image} alt={product.name} fluid />\r\n                        <Carousel.Caption className='carousel-caption'>\r\n                            <h2>{product.name} (${product.price})</h2>\r\n                        </Carousel.Caption>\r\n                    </Link>\r\n                </Carousel.Item>\r\n            ))}\r\n        </Carousel>\r\n    )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <meta name='description' content={description}></meta>\r\n            <meta name='keyword' content={keywords}></meta>\r\n        </Helmet>\r\n    )\r\n}\r\n\r\n\r\nMeta.defaultProps = {\r\n    title: 'Welcome to CyberShop',\r\n    description: 'We sell the best products for cheap',\r\n    keywords: 'electronics, buy electronics, cheap electronics'\r\n}\r\n\r\nexport default Meta\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Col, Row } from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts } from '../actions/productActions'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport Meta from '../components/Meta'\r\n\r\n\r\n\r\n\r\nconst HomeScreen = () => {\r\n    const params = useParams()\r\n\r\n    const keyword = params.keyword\r\n    const pageNumber = params.pageNumber || 1\r\n    \r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, page, pages } = productList\r\n    \r\n    useEffect(() => {\r\n       dispatch(listProducts(keyword, pageNumber))\r\n    }, [dispatch, keyword, pageNumber])\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n        <Meta title='Welcome to CyberShop | Home'/>\r\n        {!keyword ? <ProductCarousel/> : <Link to='/' className='btn btn-light'>Go Back</Link>}\r\n            <h1 className='py-3'>All Products</h1>\r\n            {loading ? (<Loader/>) : error ? (<Message variant='danger'>{error}</Message>) : (\r\n                <>\r\n                <Row>\r\n                    {products.map(product => (\r\n                        <Col className='homeprod' key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                            <Product product={product}/>\r\n                        </Col> \r\n                    ))}\r\n                </Row>  \r\n                <Paginate pages={pages} page={page} keyword={keyword ? keyword : ''}/>\r\n                </>\r\n            )}\r\n         \r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link, useParams, useNavigate } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Meta from '../components/Meta'\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst ProductScreen = () => {\r\n    const params = useParams()\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n    \r\n\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    \r\n    const productDetails = useSelector((state) => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector((state) => state.productReviewCreate)\r\n    const { success: successReview, loading: loadingReview, error: errorReview } = productReviewCreate\r\n\r\n    \r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (successReview) {\r\n            setRating(0)\r\n            setComment('')\r\n        }\r\n        if (!product._id || product._id !== params.id) {\r\n            dispatch(listProductDetails(params.id))\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n\r\n    }, [dispatch, params, product, successReview])\r\n\r\n\r\n\r\n    const addToCartHandler = () => {\r\n        navigate(`/cart/${params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(params.id, { rating, comment }))\r\n        dispatch(listProductDetails(params.id))\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n\r\n    \r\n            <Link className='btn btn-outline-primary my-3' to='/'>Go Back</Link>\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <>\r\n                <Meta title={product.name}/>\r\n                <Row>\r\n                <Col sm='auto' md='auto' lg='auto' xl='auto'>\r\n                    <Image src={product.image} alt={product.name} rounded fluid></Image>\r\n                </Col>\r\n                <Col sm md={11} lg={8} xl={6}>\r\n                    <ListGroup>\r\n                        <ListGroup.Item>\r\n                            <h4>{product.name}</h4>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Rating value={product.rating} text={`${product.numReviews} reviews`}/>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            Price: ${product.price}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            {product.description}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                    <Card className=\"card border-secondary mb-3\">\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n                                        Price:\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <strong>${product.price}</strong>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>\r\n                                        Status:\r\n                                    </Col>\r\n                                    <Col>\r\n                                        {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            {product.countInStock > 0 && (\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Qty</Col>\r\n                                        <Col>\r\n                                            <Form.Control as='select' value={qty} onChange={(e) => setQty(e.target.value)}>\r\n                                                {[...Array(product.countInStock).keys()].map((x) => (\r\n                                                    <option key={x+1} value={x+1}>{x+1}</option>\r\n                                                ))}\r\n                                            </Form.Control>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            )}\r\n\r\n                            \r\n                                <Button onClick={addToCartHandler} className='btn btn-lg btn-secondary' type='button' disabled={product.countInStock === 0}>Add to Cart</Button>\r\n                            \r\n\r\n                        \r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n\r\n                </Row>\r\n                \r\n\r\n                <Row>\r\n                    <Col md={6}> \r\n                        <h1> </h1>\r\n                        <h2 className='py-2'>Reviews</h2>  \r\n                        {product.reviews.length === 0 && <Message>No Reviews</Message>}     \r\n                        <ListGroup variant='flush'>\r\n                            {product.reviews.map((review) => (\r\n                                <ListGroup.Item key={review._id}>\r\n                                    <strong>{review.name}</strong>\r\n                                    <Rating value={review.rating} />\r\n                                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                                    <p>{review.comment}</p>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Write a customer review</h2>\r\n                            {successReview && (<Message variant='success'>Review submitted succesfully</Message>)}\r\n                            {loadingReview && <Loader/>}\r\n                            {errorReview && (<Message variant='danger'>{errorReview}</Message>)}\r\n                            {userInfo ? (\r\n                            <Form onSubmit={submitHandler}>\r\n                                <Form.Group controlId='rating'>\r\n                                    <Form.Label>Rating</Form.Label>\r\n                                    <Form.Control as='select' value={rating} onChange={(e) => setRating(e.target.value)}>\r\n                                        <option value=''>Select...</option>\r\n                                        <option value='1'>1 - Poor</option>\r\n                                        <option value='2'>2 - Fair</option>\r\n                                        <option value='3'>3 - Good</option>\r\n                                        <option value='4'>4 - Very Good</option>\r\n                                        <option value='5'>5 - Excellent</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId='comment'>\r\n                                    <Form.Label>Comment</Form.Label>\r\n                                    <Form.Control as='textarea' row='3' value={comment} onChange={(e) => setComment(e.target.value)}></Form.Control>\r\n                                </Form.Group>\r\n                                <Button disabled={loadingReview} type='submit' variant='primary'>Submit</Button>\r\n                            </Form>\r\n                            ) : ( \r\n                            <Message>Please <Link to='/login'>sign in</Link> to write a review {' '}</Message>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                        </ListGroup>                 \r\n                    </Col>\r\n                </Row>\r\n\r\n                </>\r\n\r\n            )}\r\n            \r\n        </>\r\n    \r\n    )\r\n\r\n    \r\n    \r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from 'axios'\r\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty,\r\n        },\r\n    })\r\n    \r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id,\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    })\r\n\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, { useEffect } from 'react'\r\nimport { Link, useParams, useNavigate, useLocation } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\n\r\nconst CartScreen = () => {\r\n    const params = useParams()\r\n    const navigate = useNavigate()\r\n    const location = useLocation()\r\n\r\n    const productId = params.id\r\n\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const cart = useSelector((state) => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    \r\n    \r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        navigate('/login?redirect=shipping')\r\n    }\r\n   \r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? <Message>Your cart is empty <Link to='/'>Go Back</Link></Message> : (\r\n                    <>\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map(item => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col xs={2} md={2}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded></Image>\r\n                                    </Col>\r\n                                    <Col xs={3} md={3}>\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                    </Col>\r\n                                    <Col xs={2} md={2}>\r\n                                        ${item.price}\r\n                                    </Col>\r\n                                    <Col xs={2} md={3}>\r\n                                        <Form.Select value={item.qty} onChange={(event) => dispatch(addToCart(item.product, Number(event.target.value)))}>\r\n                                            {[...Array(item.countInStock).keys()].map((x) => (\r\n                                                <option key={x + 1} value={x + 1}>{x + 1}</option>\r\n                                            ))}\r\n                                        </Form.Select>\r\n                                    </Col>\r\n                                    <Col xs={2} md={1}>\r\n                                        <Button type='button' variant='light' onClick={() => removeFromCartHandler(item.product)}><i className='fas fa-trash'></i></Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                    <p></p>\r\n                    <Link to='/'><Button type='button' className='btn btn-dark'>Continue Shopping</Button></Link>\r\n                    </>\r\n                )}\r\n            </Col>\r\n            \r\n            <Col md={4}>\r\n                <h1>checkout</h1>\r\n                <Card className='card border-primary mb-3'>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h3>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h3>\r\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button type='button' className='btn-block' disabled={cartItems.length === 0} onClick={checkoutHandler}>Proceed to Checkout</Button>\r\n                        </ListGroup.Item>\r\n                        \r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n            \r\n        </Row>\r\n    ) \r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col md={8} lg={7} xl={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\n\r\nconst LoginScreen = () => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { loading, error, userInfo } = userLogin\r\n\r\n    const location = useLocation()\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const navigate = useNavigate()\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            navigate(redirect)\r\n        }\r\n    }, [navigate, userInfo, redirect])\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            \r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email' className='py-2'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control type='email' placeholder='Enter email' value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                \r\n                <Form.Group controlId='password' className='py-2'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='Enter password' value={password} onChange={(e) => setPassword(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>Sign In</Button>\r\n            </Form>\r\n            \r\n            <Row className='py-4'>\r\n                <Col>\r\n                    New Customer? <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>Register</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link, useLocation, useNavigate } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\n\r\nconst RegisterScreen = () => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { loading, error, userInfo } = userRegister\r\n\r\n    const location = useLocation()\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const navigate = useNavigate()\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            navigate(redirect)\r\n        }\r\n    }, [navigate, userInfo, redirect])\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            \r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name' className='py-2'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control type='name' placeholder='Enter full name' value={name} onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email' className='py-2'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control type='email' placeholder='Enter email' value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                \r\n                <Form.Group controlId='password' className='py-2'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='Enter password' value={password} onChange={(e) => setPassword(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword' className='py-2'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control type='password' placeholder='Confirm password' value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>Register</Button>\r\n\r\n            </Form>\r\n            \r\n            <Row className='py-4'>\r\n                <Col>\r\n                    Have an Account? <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>Login</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen","import React, { useState, useEffect } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { listMyOrders } from '../actions/orderActions'\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\r\n\r\nconst ProfileScreen = () => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderMyList = useSelector(state => state.orderMyList)\r\n    const { loading:loadingOrders, error:errorOrders, orders } = orderMyList\r\n\r\n\r\n    const navigate = useNavigate()\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            navigate('/login')\r\n        } else {\r\n            if (!user || !user.name || success) {\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [navigate, dispatch, userInfo, user, success])\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (password !== confirmPassword) {\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {}\r\n                {success && <Message variant='success'>Profile Updated</Message>}\r\n                {loading ? (<Loader />) : error ? (<Message variant='danger'>{error}</Message>) : (\r\n                \r\n                <Form onSubmit={submitHandler}>\r\n\r\n                    <Form.Group controlId='name' className='py-2'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control type='name' placeholder='Enter name' value={name} onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email' className='py-2'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control type='email' placeholder='Enter email' value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group controlId='password' className='py-2'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type='password' placeholder='Enter password' value={password} onChange={(e) => setPassword(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='confirmPassword' className='py-2'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control type='password' placeholder='Confirm password' value={confirmPassword} onChange={(e) => setConfirmPassword(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Button type='submit' variant='primary'>Update Profile</Button>\r\n\r\n                </Form>\r\n\r\n                )}\r\n            </Col>\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                {loadingOrders ? <Loader/> : errorOrders ? <Message variant='danger'>{errorOrders}</Message> : (\r\n                    <Table striped bordered hover responsive className='table-sm'>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>DATE</th>\r\n                                <th>TOTAL</th>\r\n                                <th>PAID</th>\r\n                                <th>DELIVERED</th>\r\n                                <th></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {orders.map(order => (\r\n                                <tr key={order._id} >\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>{order.totalPrice}</td>\r\n                                    <td>{order.isPaid ? order.paidAt.substring(0, 10) : (<i className='fas fa-times' style={{ color: 'red' }}></i>)}</td>\r\n                                    <td>{order.isDelivered ? order.deliveredAt.substring(0, 10) : (<i className='fas fa-times' style={{ color: 'red' }}></i>)}</td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button className='btn-sm' variant='light'>Details</Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                )}\r\n            </Col>\r\n        </Row>\r\n\r\n\r\n       \r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import axios from 'axios'\r\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, ORDER_MYLIST_REQUEST, ORDER_MYLIST_SUCCESS, ORDER_MYLIST_FAIL, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAIL, ORDER_DELIVER_REQUEST, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_FAIL } from \"../constants/orderConstants\";\r\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants';\r\nimport { logout } from './userActions';\r\n\r\n\r\n\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState() \r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/orders`, order, config)\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_CLEAR_ITEMS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message ? error.response.data.message : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState() \r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders/${id}`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message ? error.response.data.message : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState() \r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config)\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message ? error.response.data.message : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_MYLIST_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState() \r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders/myorders`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_MYLIST_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message ? error.response.data.message : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: ORDER_MYLIST_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState() \r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/orders`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message ? error.response.data.message : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST,\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState() \r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/orders/${order._id}/deliver`, {}, config)\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        const message = error.response && error.response.data.message ? error.response.data.message : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item>\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Sign In</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (<Nav.Link disabled>Sign In</Nav.Link>)}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step2 ? (\r\n                    <LinkContainer to='/login/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (<Nav.Link disabled>Shipping</Nav.Link>)}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (<Nav.Link disabled>Payment</Nav.Link>)}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item>\r\n                {step4 ? (\r\n                    <LinkContainer to='/placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (<Nav.Link disabled>Place Order</Nav.Link>)}\r\n            </Nav.Item>\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\n\r\n\r\nconst ShippingScreen = () => {\r\n    const navigate = useNavigate()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        navigate('/payment')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n\r\n            <Form.Group controlId='address' className='py-2'>\r\n                <Form.Label>Address</Form.Label>\r\n                <Form.Control type='text' placeholder='Enter address' value={address} required onChange={(e) => setAddress(e.target.value)}></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='city' className='py-2'>\r\n                <Form.Label>City</Form.Label>\r\n                <Form.Control type='text' placeholder='Enter city' value={city} required onChange={(e) => setCity(e.target.value)}></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='postalCode' className='py-2'>\r\n                <Form.Label>Postal Code</Form.Label>\r\n                <Form.Control type='text' placeholder='Enter postal code' value={postalCode} required onChange={(e) => setPostalCode(e.target.value)}></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='country' className='py-2'>\r\n                <Form.Label>Country</Form.Label>\r\n                <Form.Control type='text' placeholder='Enter country' value={country} required onChange={(e) => setCountry(e.target.value)}></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>Continue</Button>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen","import React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\n\r\n\r\nconst PaymentScreen = () => {\r\n    const navigate = useNavigate()\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    if (!shippingAddress) {\r\n        navigate('/login/shipping')\r\n    }\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        navigate('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3/>\r\n            <h1>Payment Method</h1>\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n            \r\n                    <Col>\r\n                        <Form.Check type='radio' label='PayPal or Credit Card' id='PayPal' name='paymentMethod' value='PayPal' checked onChange={(e) => setPaymentMethod(e.target.value)}></Form.Check>\r\n                        {/* <Form.Check type='radio' label='Stripe' id='Stripe' name='paymentMethod' value='Stripe' onChange={(e) => setPaymentMethod(e.target.value)}></Form.Check> */}\r\n                    </Col>\r\n                </Form.Group>\r\n            \r\n\r\n            <Button type='submit' variant='primary'>Continue</Button>\r\n\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen","import React, { useEffect } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\nimport { USER_DETAILS_RESET } from '../constants/userConstants'\r\n\r\n\r\n\r\n\r\n\r\nconst PlaceOrderScreen = () => {\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const cart = useSelector((state) => state.cart)\r\n\r\n    if (!cart.shippingAddress.address) {\r\n        navigate('/shipping')\r\n    } else if (!cart.paymentMethod) {\r\n        navigate('/payment')\r\n    }\r\n\r\n\r\n    // prices\r\n    const addDecimals = (num) => {\r\n        return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n    cart.itemsPrice = addDecimals(cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0))\r\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 16.99)\r\n    const taxRate = 0.15\r\n    cart.taxPrice = addDecimals(Number((taxRate * cart.itemsPrice).toFixed(2)))\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n\r\n    const orderCreate = useSelector((state) => state.orderCreate)\r\n    const { order, success, error } = orderCreate\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            navigate(`/order/${order._id}`)\r\n            dispatch({ type: USER_DETAILS_RESET })\r\n            dispatch({ type: ORDER_CREATE_RESET })\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [navigate, dispatch, success, order])\r\n\r\n\r\n    const placeOrderHandler = () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <CheckoutSteps step1 step2 step3 step4 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n\r\n                        <ListGroup.Item>\r\n                            <h3>Shipping</h3>\r\n                            <p>\r\n                                <strong>Address: </strong>\r\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city} {cart.shippingAddress.postalCode}, {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h3>Payment Method</h3>\r\n                            <strong>Method: </strong>\r\n                            {cart.paymentMethod}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h3>Order Items</h3>\r\n                            {cart.cartItems.length === 0 ? <Message>Your cart is empty</Message> : (\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h3>Order Summary</h3>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col><strong>Total</strong></Col>\r\n                                    <Col><strong>${cart.totalPrice}</strong></Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n\r\n                            \r\n                            <Button type='button' className='btn btn-lg btn-secondary' disabled={cart.cartItems === 0} onClick={placeOrderHandler}>Place Order</Button>\r\n                            \r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link, useParams, useNavigate } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\n\r\n\r\n\r\n\r\nconst OrderScreen = () => {\r\n    const params = useParams()\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n\r\n    const orderId = params.id\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, loading, error } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading:loadingPay, success:successPay  } = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading:loadingDeliver, success:successDeliver  } = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n    if (!loading) {\r\n        const addDecimals = (num) => {\r\n            return (Math.round(num * 100) / 100).toFixed(2)\r\n        }\r\n        // prices\r\n        order.itemsPrice = addDecimals(order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0))\r\n    \r\n    }\r\n    \r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (!userInfo) {\r\n            navigate('/login')\r\n        }\r\n\r\n        const addPayPalScript = async () => {\r\n            const { data: clientId } = await axios.get('/api/config/paypal')\r\n            const script = document.createElement('script')\r\n            script.type = 'text/javascript'\r\n            script.src =  `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n            script.async = true\r\n            script.onload = () => {\r\n                setSdkReady(true)\r\n            }\r\n            document.body.appendChild(script)\r\n        }\r\n\r\n        if (!order || successPay || successDeliver || order._id !== orderId) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n            dispatch(getOrderDetails(orderId))\r\n        } else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n\r\n    }, [dispatch, navigate, orderId, successPay, order, successDeliver, userInfo])\r\n\r\n   \r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        console.log(paymentResult)\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n\r\n    return (\r\n        loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : <>\r\n            <h1>Order {order._id}</h1>\r\n\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n\r\n                        <ListGroup.Item>\r\n                            <h3>Shipping</h3>\r\n                            <p><strong>Name:  </strong>  {order.user.name}</p>\r\n                            <p><strong>Email:  </strong>  <a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                            <p>\r\n                                <strong>Address: </strong>\r\n                                {order.shippingAddress.address}, {order.shippingAddress.city} {order.shippingAddress.postalCode}, {order.shippingAddress.country}\r\n                            </p>\r\n                            {order.isDelivered ? <Message variant='success'>Delivered on {order.deliveredAt}</Message> : <Message variant='warning'>Not Delivered</Message>}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h3>Payment Method</h3>\r\n                            <p>\r\n                            <strong>Method: </strong>\r\n                            {order.paymentMethod}\r\n                            </p>\r\n                            {order.isPaid ? <Message variant='success'>Paid on {order.paidAt}</Message> : <Message variant='warning'>Not Paid</Message>}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h3>Order Items</h3>\r\n                            {order.orderItems.length === 0 ? <Message>Order is empty</Message> : (\r\n                                <ListGroup variant='flush'>\r\n                                    {order.orderItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h3>Order Summary</h3>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col><strong>Total</strong></Col>\r\n                                    <Col><strong>${order.totalPrice}</strong></Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            {!order.isPaid && (\r\n                                <ListGroup.Item>\r\n                                    {loadingPay && <Loader />}\r\n                                    {!sdkReady ? <Loader /> : (\r\n                                        <PayPalButton amount={order.totalPrice} onSuccess={successPaymentHandler}/>\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            )}\r\n                            \r\n                            {loadingDeliver && <Loader />}\r\n                            {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                <ListGroup.Item>\r\n                                    <Button type='button' className='btn btn-block' onClick={deliverHandler}>Mark as Delivered</Button>\r\n                                </ListGroup.Item>\r\n                            )}\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n\r\n       \r\n    )\r\n}\r\n\r\n\r\nexport default OrderScreen","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux' \r\nimport { useNavigate } from 'react-router-dom'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\n\r\n\r\n\r\nconst UsersListScreen = () => {\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success:successDelete } = userDelete\r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        } else {\r\n            navigate('/login')\r\n        }\r\n        \r\n    }, [dispatch, navigate, userInfo, successDelete])\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure to delete this user?')) {\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n\r\n    \r\n    return (\r\n        <>\r\n        <h1>Users</h1>\r\n        {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n            <Table striped bordered hover responsive className='table-sm'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>NAME</th>\r\n                        <th>EMAIL</th>\r\n                        <th>ADMIN</th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {users.map(user => (\r\n                        <tr key={user._id}>\r\n                            <td>{user._id}</td>\r\n                            <td>{user.name}</td>\r\n                            <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\r\n                            <td>\r\n                                {user.isAdmin ? (<i className='fas fa-check' style={{color: 'green'}}></i>) : (<i className='fas fa-times' style={{color: 'red'}}></i>)}\r\n                            </td>\r\n                            <td>\r\n                                <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                    <Button variant='light' className='btn-sm'>\r\n                                        <i className='fas fa-edit'></i>\r\n                                    </Button>\r\n                                </LinkContainer>\r\n                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                    <i className='fas fa-trash'></i>\r\n                                </Button>\r\n                            </td>\r\n\r\n\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </Table>\r\n        )}\r\n        \r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default UsersListScreen\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link, useParams, useNavigate } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nconst UserEditScreen = () => {\r\n    const params = useParams()\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const userId = params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { loading:loadingUpdate, error:errorUpdate, success:successUpdate } = userUpdate\r\n   \r\n    \r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            navigate('/admin/userlist')\r\n        } else {\r\n            if (!user.name || user._id !== userId) {\r\n                dispatch(getUserDetails(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n       \r\n\r\n    }, [dispatch, user, userId, successUpdate, navigate])\r\n\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id: userId, name, email, isAdmin}))      \r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <Link to='/admin/userlist' className='btn btn-light my-3'>Go Back</Link>\r\n\r\n        <FormContainer>\r\n\r\n            <h1>Edit User</h1>\r\n            {loadingUpdate && <Loader/>}\r\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n            {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                    <Form.Group controlId='name' className='py-2'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control type='name' placeholder='Enter name' value={name} onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email' className='py-2'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control type='email' placeholder='Enter email' value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group controlId='isAdmin' className='py-2'>\r\n                        <Form.Check type='checkbox' label='Is Admin' checked={isAdmin} onChange={(e) => setIsAdmin(e.target.checked)}></Form.Check>\r\n                    </Form.Group>\r\n\r\n                    \r\n\r\n                    <Button type='submit' variant='primary'>Update</Button>\r\n\r\n                </Form>\r\n            )}\r\n            \r\n        </FormContainer>\r\n        </>\r\n       \r\n    )\r\n}\r\n\r\nexport default UserEditScreen","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux' \r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\n\r\n\r\nconst ProductListScreen = () => {\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const params = useParams()\r\n\r\n    const pageNumber = params.pageNumber || 1\r\n    \r\n\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, page, pages } = productList\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const { loading:loadingDelete, error:errorDelete, success:successDelete } = productDelete\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading:loadingCreate, error:errorCreate, success:successCreate, product:createdProduct } = productCreate\r\n\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    \r\n\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        if (!userInfo.isAdmin) {\r\n            navigate('/login')\r\n        }\r\n\r\n        if (successCreate) {\r\n            navigate(`/admin/product/${createdProduct._id}/edit`)\r\n        } else {\r\n            dispatch(listProducts('', pageNumber))\r\n        }\r\n        \r\n    }, [dispatch, navigate, userInfo, successDelete, successCreate, createdProduct, pageNumber])\r\n\r\n\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure to delete this product?')) {\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    const createProductHandler = () => {\r\n        dispatch(createProduct())\r\n    }\r\n\r\n    \r\n    return (\r\n        <>\r\n        <Row className='align-items-center'>\r\n            <Col>\r\n                <h1>Products</h1>\r\n            </Col>\r\n            <Col>\r\n                <Button className='my-3' onClick={createProductHandler}>\r\n                    <i className='fas fa-plus'></i> Create Product\r\n                </Button>\r\n            </Col>\r\n        </Row>\r\n        {loadingDelete && <Loader/>}\r\n        {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n        {loadingCreate && <Loader/>}\r\n        {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n        {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n            <>\r\n            <Table striped bordered hover responsive className='table-sm'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>NAME</th>\r\n                        <th>PRICE</th>\r\n                        <th>CATEGORY</th>\r\n                        <th>BRAND</th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {products.map(product => (\r\n                        <tr key={product._id}>\r\n                            <td>{product._id}</td>\r\n                            <td>{product.name}</td>\r\n                            <td>${product.price}</td>\r\n                            <td>\r\n                                {product.category}\r\n                            </td>\r\n                            <td>{product.brand}</td>\r\n                            <td>\r\n                                <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                    <Button variant='light' className='btn-sm'>\r\n                                        <i className='fas fa-edit'></i>\r\n                                    </Button>\r\n                                </LinkContainer>\r\n                                <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product._id)}>\r\n                                    <i className='fas fa-trash'></i>\r\n                                </Button>\r\n                            </td>\r\n\r\n\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </Table>\r\n            <Paginate pages={pages} page={page} isAdmin={true}/>\r\n            </>\r\n        )}\r\n        \r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen\r\n","import axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport { Link, useParams, useNavigate } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\n\r\nconst ProductEditScreen = () => {\r\n    const params = useParams()\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n    const productId = params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n\r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { loading:loadingUpdate, error:errorUpdate, success:successUpdate } = productUpdate\r\n    \r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            navigate('/admin/productlist')\r\n        } else {\r\n            if (!product.name || product._id !== productId) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setImage(product.image)\r\n                setBrand(product.brand)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n            }\r\n        }      \r\n\r\n    }, [dispatch, navigate, product, productId, successUpdate])\r\n\r\n\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data',\r\n                }\r\n            }\r\n\r\n            const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n            \r\n        } catch (error) {\r\n            console.error(error)\r\n            setUploading(false)\r\n            \r\n        }\r\n    }\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n            _id: productId,\r\n            name,\r\n            price, \r\n            image, \r\n            brand,\r\n            category,\r\n            description,\r\n            countInStock,\r\n        }))\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <Link to='/admin/productlist' className='btn btn-light my-3'>Go Back</Link>\r\n\r\n        <FormContainer>\r\n\r\n            <h1>Edit Product</h1>\r\n            {loadingUpdate && <Loader/>}\r\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n\r\n            {loading ? <Loader/> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                    <Form.Group controlId='name' className='py-2'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control type='name' placeholder='Enter name' value={name} onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='price' className='py-2'>\r\n                        <Form.Label>Price</Form.Label>\r\n                        <Form.Control type='number' placeholder='Enter price' value={price} onChange={(e) => setPrice(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group controlId='image' className='py-2'>\r\n                        <Form.Label>Image</Form.Label>\r\n                        <Form.Control type='text' placeholder='Enter image url' value={image} onChange={(e) => setImage(e.target.value)}></Form.Control>\r\n                        \r\n                        <Form.Control type='file' label='Choose file' onChange={uploadFileHandler}/> {uploading && <Loader />}\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='brand' className='py-2'>\r\n                        <Form.Label>Brand</Form.Label>\r\n                        <Form.Control type='text' placeholder='Enter brand' value={brand} onChange={(e) => setBrand(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='category' className='py-2'>\r\n                        <Form.Label>Category</Form.Label>\r\n                        <Form.Control type='text' placeholder='Enter category' value={category} onChange={(e) => setCategory(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='countInStock' className='py-2'>\r\n                        <Form.Label>Count in Stock</Form.Label>\r\n                        <Form.Control type='number' placeholder='Enter count in stock' value={countInStock} onChange={(e) => setCountInStock(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='description' className='py-2'>\r\n                        <Form.Label>Description</Form.Label>\r\n                        <Form.Control type='text' placeholder='Enter description' value={description} onChange={(e) => setDescription(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n                    \r\n\r\n                    <Button type='submit' variant='primary'>Update</Button>\r\n\r\n                </Form>\r\n            )}\r\n            \r\n        </FormContainer>\r\n        </>\r\n       \r\n    )\r\n}\r\n\r\nexport default ProductEditScreen","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux' \r\nimport { useNavigate } from 'react-router-dom'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listOrders } from '../actions/orderActions'\r\n\r\n\r\n\r\n\r\nconst OrderListScreen = () => {\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    \r\n\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders())\r\n        } else {\r\n            navigate('/login')\r\n        }\r\n        \r\n    }, [dispatch, navigate, userInfo])\r\n\r\n\r\n    \r\n\r\n    \r\n    return (\r\n        <>\r\n        <h1>Orders</h1>\r\n        {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n            <Table striped bordered hover responsive className='table-sm'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>USER</th>\r\n                        <th>DATE</th>\r\n                        <th>TOTAL</th>\r\n                        <th>PAID</th>\r\n                        <th>DELIVERED</th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {orders.map(order => (\r\n                        <tr key={order._id}>\r\n                            <td>{order._id}</td>\r\n                            <td>{order.user && order.user.name}</td>\r\n                            <td>{order.createdAt.substring(0, 10)}</td>\r\n                            <td>${order.totalPrice}</td>\r\n                            <td>\r\n                                {order.isPaid ? (order.paidAt.substring(0, 10)) : (<i className='fas fa-times' style={{color: 'red'}}></i>)}\r\n                            </td>\r\n                            <td>\r\n                                {order.isDelivered ? (order.deliveredAt.substring(0, 10)) : (<i className='fas fa-times' style={{color: 'red'}}></i>)}\r\n                            </td>\r\n                            <td>\r\n                                <LinkContainer to={`/order/${order._id}`}>\r\n                                    <Button variant='light' className='btn-sm'>\r\n                                        Details\r\n                                    </Button>\r\n                                </LinkContainer>\r\n                            </td>\r\n\r\n\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </Table>\r\n        )}\r\n        \r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen","import { BrowserRouter as Router, Routes, Route } from 'react-router-dom' \nimport {Container} from 'react-bootstrap'\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ShippingScreen from './screens/ShippingScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport UsersListScreen from './screens/UsersListScreen';\nimport UserEditScreen from './screens/UserEditScreen';\nimport ProductListScreen from './screens/ProductListScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\nimport OrderListScreen from './screens/OrderListScreen';\n\n\n\n\n\nfunction App() {\n  return (\n    <Router>\n    <Header />\n    <main className='py-3'>\n      <Container>\n        <Routes>\n          <Route path='/' element={<HomeScreen/>} />\n          <Route path='/search/:keyword' element={<HomeScreen/>} />\n          <Route path='/page/:pageNumber' element={<HomeScreen/>} />\n          <Route path='/search/:keyword/page/:pageNumber' element={<HomeScreen/>} />\n          <Route path='/product/:id' element={<ProductScreen/>} />\n          <Route path='/cart/*' element={<CartScreen/>} />\n          <Route path='/cart/:id/*' element={<CartScreen/>} />\n          <Route path='/login' element={<LoginScreen/>} />\n          <Route path='/register/*' element={<RegisterScreen/>} />\n          <Route path='/profile' element={<ProfileScreen/>} />\n          <Route path='/login/shipping' element={<ShippingScreen/>} />\n          <Route path='/payment' element={<PaymentScreen/>} />\n          <Route path='/placeorder' element={<PlaceOrderScreen />} />\n          <Route path='/order/:id' element={<OrderScreen /> } />\n          <Route path='/admin/userlist' element={<UsersListScreen />} />\n          <Route path='/admin/user/:id/edit' element={<UserEditScreen/>} />\n          <Route path='/admin/productlist' element={<ProductListScreen/>}/>\n          <Route path='/admin/productlist/:pageNumber' element={<ProductListScreen/>}/>\n          <Route path='/admin/product/:id/edit' element={< ProductEditScreen />} />\n          <Route path='/admin/orderlist' element={< OrderListScreen />} />\n        </Routes>\n      </Container>\n    </main>\n    <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}